@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ThemeService ThemeService

<div class="flex items-center h-[50px]">
    <button 
        class="text-text-primary-light dark:text-text-primary-dark hover:bg-blue-primary hover:text-text-primary-dark w-[50px] h-[50px] transition-colors duration-300 ease-in-out focus:outline-none" 
        @onclick="ToggleTheme"
        aria-label="Toggle Theme">
        @if (ThemeService.IsDarkMode)
        {
            <i class="fas fa-sun text-lg"></i>
        }
        else
        {
            <i class="fas fa-moon text-lg"></i>
        }
    </button>
    <button @onclick="ToggleDropdown" class="flex items-center text-text-primary-light dark:text-text-primary-dark hover:bg-blue-primary hover:text-text-primary-dark px-4 h-full transition duration-300 ease-in-out group focus:outline-none" aria-expanded="@_isDropdownOpen" aria-haspopup="true">
        <div class="rounded-full w-[30px] h-[30px] bg-background-secondary-light dark:bg-background-secondary-dark flex items-center justify-center shadow-sm group-hover:bg-text-primary-light dark:group-hover:bg-text-primary-dark">
            <i class="fas fa-user text-sm group-hover:text-background-secondary-light dark:group-hover:text-background-secondary-dark" aria-hidden="true"></i>
        </div>
        <i class="fas fa-chevron-down ml-2 text-xs transition-transform duration-300 @(_isDropdownOpen ? "rotate-180" : "")" aria-hidden="true"></i>
    </button>
    @if (_isDropdownOpen)
    {
        <div class="absolute top-[55px] right-2 bg-background-primary-light dark:bg-background-primary-dark shadow-lg rounded overflow-hidden w-64 z-50">
            <div class="px-4 py-3 text-text-primary-light dark:text-text-primary-dark flex flex-col items-center">
                <div class="w-20 h-20 rounded-full bg-blue-primary flex items-center justify-center mb-3 transition-transform duration-300 hover:scale-110">
                    <span class="text-3xl text-text-primary-dark font-bold">@(_firstName.FirstOrDefault())@(_lastName.FirstOrDefault())</span>
                </div>
                <div class="text-center">
                    <div class="font-semibold hover:text-blue-primary transition-colors duration-300">@_firstName @_lastName</div>
                    <div class="text-sm text-text-secondary-light dark:text-text-secondary-dark hover:underline transition-all duration-300">@_email</div>
                </div>
            </div>
            <div class="border-t border-background-secondary-light dark:border-background-secondary-dark"></div>
            <a href="/profile" class="flex items-center px-4 py-3 text-text-primary-light dark:text-text-primary-dark hover:bg-blue-primary hover:text-text-primary-dark transition duration-300 ease-in-out group">
                <i class="fas fa-user-circle mr-3 group-hover:rotate-12 transition-transform duration-300"></i>
                <span class="group-hover:translate-x-1 transition-transform duration-300">Account</span>
            </a>
            <div class="border-t border-background-secondary-light dark:border-background-secondary-dark"></div>
            <a href="/settings" class="flex items-center px-4 py-3 text-text-primary-light dark:text-text-primary-dark hover:bg-blue-primary hover:text-text-primary-dark transition duration-300 ease-in-out group">
                <i class="fas fa-cog mr-3 group-hover:rotate-90 transition-transform duration-300"></i>
                <span class="group-hover:translate-x-1 transition-transform duration-300">Settings</span>
            </a>
            <div class="border-t border-background-secondary-light dark:border-background-secondary-dark"></div>
            <a href="/logout" class="flex items-center px-4 py-3 text-text-primary-light dark:text-text-primary-dark hover:bg-red-primary hover:text-text-primary-dark transition duration-300 ease-in-out group">
                <i class="fas fa-sign-out-alt mr-3 group-hover:-translate-x-1 transition-transform duration-300"></i>
                <span class="group-hover:translate-x-1 transition-transform duration-300">Logout</span>
            </a>
        </div>
    }
</div>


@code {
    private bool _isDropdownOpen;
    private string _firstName = string.Empty;
    private string _email = string.Empty;
    private string _lastName = string.Empty;

    private async Task ToggleTheme()
    {
        await ThemeService.ToggleThemeAsync();
        StateHasChanged();
    }
    
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        _firstName = user.Claims.FirstOrDefault(c => c.Type == ClaimTypes.GivenName)?.Value ?? string.Empty;
        _lastName = user.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Surname)?.Value ?? string.Empty;
        _email = user.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Email)?.Value ?? string.Empty;
    }

    private void ToggleDropdown()
    {
        _isDropdownOpen = !_isDropdownOpen;
    }
}