@page "/login"

@using ReSale.Api.Contracts.Requests.Auth
@inject IAuthenticationClient AuthenticationClient
@inject ILocalStorageService LocalStorage
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>ReSale | Login</PageTitle>

<Notification @ref="_notificationComponent" />

<div class="h-screen text-white">
    <div class="flex items-center justify-center h-screen bg-darker-gray">
        <div class="bg-dark-gray p-8 rounded shadow-md w-full max-w-md">
            <h2 class="text-2xl mb-6 text-center text-white">ReSale</h2>
            <EditForm Model="@_loginModel" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator/>

                <div class="mb-4">
                    <label for="email" class="block text-white">Email</label>
                    <InputText id="email" class="w-full p-2 mt-2 rounded bg-table-gray text-white" @bind-Value="_loginModel.Email"/>
                    <div class="text-red-primary">
                        <ValidationMessage For="@(() => _loginModel.Email)"/>
                    </div>
                </div>

                <div>
                    <label for="password" class="block text-white">Password</label>
                    <InputText id="password" type="password" class="w-full p-2 mt-2 rounded bg-table-gray text-white" @bind-Value="_loginModel.Password"/>
                    <div class="text-red-primary">
                        <ValidationMessage For="@(() => _loginModel.Password)"/>
                    </div>
                    <p class="text-red-primary">@_errorMessage</p>
                </div>
                <div class="mt-2 mb-8">
                    <a href="/forgot" class="text-blue-primary hover:text-blue-secondary">Forgot Password?</a>
                </div>

                <button type="submit" disabled="@_isBusy" class="w-full bg-blue-primary hover:bg-blue-secondary disabled:bg-light-gray text-white p-2 rounded">Login</button>
            </EditForm>
            <div class="mt-2">
                <a href="/register" class="text-blue-primary hover:text-blue-secondary">Don't have an account? Register here</a>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel _loginModel = new();
    private Notification _notificationComponent = new();
    private string _errorMessage = string.Empty;
    private bool _isBusy = false;

    private async Task HandleLogin()
    {
        _errorMessage = string.Empty;
        _isBusy = true;
        
        try
        {
            var result = await AuthenticationClient.Login(new LoginUserRequest(_loginModel.Email, _loginModel.Password));
        
            await LocalStorage.SetItemAsync("accessToken", result.AccessToken);
            await LocalStorage.SetItemAsync("refreshToken", result.RefreshToken);
            
            await AuthenticationStateProvider.GetAuthenticationStateAsync();
            _isBusy = false;
            Navigation.NavigateTo("/");
        }
        catch (Exception)
        {
            _isBusy = false;
            _ = ShowNotification("Error", "An error occurred while trying to log in. Please try again.", Notification.NotificationType.Error);
        }
    }
    
    private async Task ShowNotification(string title, string message, Notification.NotificationType notificationType)
    { 
        await _notificationComponent.Show(title, message, notificationType);
    }

    public class LoginModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = string.Empty;

        [Required]
        public string Password { get; set; } = string.Empty;
    }
}