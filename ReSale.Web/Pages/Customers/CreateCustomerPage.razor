@page "/customers/create"

@using ReSale.Api.Contracts.Requests.Customers
@using ReSale.Web.Models

@inject ICustomerClient CustomerClient
@inject NavigationManager NavigationManager

<div class="h-full flex flex-col">
    <h3 class="p-4 bg-table-gray">Create Customer</h3>
    
    <EditForm Model="_customer" class="mt-4 p-4 bg-table-gray flex-grow" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator/>

        <div class="mb-4">
            <label for="email" class="block">Email</label>
            <InputText id="email" @bind-Value="_customer.Email" class="bg-dark-gray p-2 w-[210px]"/>
            <div class="text-red-primary">
                <ValidationMessage For="@(() => _customer.Email)"/>
            </div>
        </div>
        
        <div class="mb-4">
            <label for="firstName" class="block">First Name</label>
            <InputText id="firstName" @bind-Value="_customer.FirstName" class="bg-dark-gray p-2 w-[210px]"/>
            <div class="text-red-primary">
                <ValidationMessage For="@(() => _customer.FirstName)"/>
            </div>
        </div>
        
        <div class="mb-4">
            <label for="lastName" class="block">Last Name</label>
            <InputText id="lastName" @bind-Value="_customer.LastName" class="bg-dark-gray p-2 w-[210px]"/>
            <div class="text-red-primary">
                <ValidationMessage For="@(() => _customer.LastName)"/>
            </div>
        </div>

        <div class="mb-4">
            <label for="street" class="block">Street</label>
            <InputText id="street" @bind-Value="_customer.Street" class="bg-dark-gray p-2 w-[210px]"/>
            <div class="text-red-primary">
                <ValidationMessage For="@(() => _customer.Street)"/>
            </div>
        </div>

        <div class="mb-4">
            <label for="city" class="block">City</label>
            <InputText id="city" @bind-Value="_customer.City" class="bg-dark-gray p-2 w-[210px]"/>
            <div class="text-red-primary">
                <ValidationMessage For="@(() => _customer.City)"/>
            </div>
        </div>

        <div class="mb-4">
            <label for="zipCode" class="block">Zip Code</label>
            <InputText id="zipCode" @bind-Value="_customer.ZipCode" class="bg-dark-gray p-2 w-[210px]"/>
            <div class="text-red-primary">
                <ValidationMessage For="@(() => _customer.ZipCode)"/>
            </div>
        </div>

        <div class="mb-4">
            <label for="country" class="block">Country</label>
            <InputText id="country" @bind-Value="_customer.Country" class="bg-dark-gray p-2 w-[210px]"/>
            <div class="text-red-primary">
                <ValidationMessage For="@(() => _customer.Country)"/>
            </div>
        </div>

        <div class="mb-4">
            <label for="state" class="block">State</label>
            <InputText id="state" @bind-Value="_customer.State" class="bg-dark-gray p-2 w-[210px]"/>
            <div class="text-red-primary">
                <ValidationMessage For="@(() => _customer.State)"/>
            </div>
        </div>
        
        <div class="flex">
            <button type="submit" class="hover:bg-green-primary bg-dark-gray w-[100px] h-[40px]">Create</button>
            <button class="hover:bg-red-primary bg-dark-gray w-[100px] h-[40px] ml-2" @onclick="@(() => NavigationManager.NavigateTo("/customers"))">Cancel</button>
        </div>
    </EditForm>
</div>

@code {
    private CreateCustomer _customer = new();

    private async Task HandleValidSubmit()
    {
        var request = new CreateCustomerRequest
        {
            Email = _customer.Email,
            FirstName = _customer.FirstName,
            LastName = _customer.LastName,
            Street = _customer.Street,
            City = _customer.City,
            State = _customer.State,
            ZipCode = _customer.ZipCode,
            Country = _customer.Country
        };
        
        await CustomerClient.CreateCustomer(request);
        
        NavigationManager.NavigateTo("/customers");
    }
}